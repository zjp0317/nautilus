ENTRY(pisces_boot_start)

SECTIONS
{
    . = 0x200000;

    .boot :
    {
        _loadStart = .; 
        pisces_boot_start = .;
        *(.boot)
        . = ALIGN(4096);

        pml4 = .;
        . += 0x1000;
        pdpt = .;       /* to cover pml4[0] */ 
        . += 0x1000;
        pd = .;         /* to cover pml4[0]->pdpt[0] */ 
        . += 0x1000; 

        pdpt_extra = .; /* in case the mem from pisces does not in pml4[0] */ 
        . += 0x1000;
        pd_extra = .;   /* in case the mem from pisces does not in pml4[0] nor pml4[0]->pdpt[0] */
        . += 0x1000; 

        boot_stack_start = .;
        . += 0x200000;  /* we start out with a 2M stack */
        boot_stack_end = .;
    }


    .text ALIGN(0x1000) : 
    {
        *(.text*)
        *(.gnu.linkonce.t*)
    }

    .init ALIGN(0x1000) : AT(ADDR(.text) + SIZEOF(.text))
    {
        *(.init)
        *(.gnu.linkonce.init)
    }

    .fini ALIGN(0x1000) : AT(ADDR(.init) + SIZEOF(.init))
    {
        *(.fini)
        *(.gnu.linkonce.fini)
    }

    .init_array ALIGN(0x1000) : AT(ADDR(.fini) + SIZEOF(.fini))
    {
        _init_array_start = .;
        *(.init_array*)
        _init_array_end = .;
        *(.gnu.linkonce.init_array*)

    }


    .gcc_except_table ALIGN(0x1000) : AT(ADDR(.init_array) + SIZEOF(.init_array))
    {
        *(.gcc_except_table*)
        *(.gnu.linkonce.gcc_except*)
    }

    _data_start = . ;    

    .data ALIGN(0x1000) : AT(ADDR(.gcc_except_table) + SIZEOF(.gcc_except_table))
    {
        *(.data*)
        *(.gnu.linkonce.d*)
    }

    .tests ALIGN(0x1000) : 
    {
        __start_tests = .;
        *(.tests*);
        __stop_tests = .;
    }

    .cmdline_flags ALIGN(0x1000) : 
    {
        __start_flags = .;
        *(.cmdline_flags*);
        __stop_flags = .;
    }
    
    .rodata ALIGN(0x1000) : 
    {
        __rodata_start = .;
        LONG(0x00000000deadbeef);
        *(.rodata*)
        *(.gnu.linkonce.r*)
    }

    .got ALIGN(0x1000) : 
    {
        *(.got*)
        *(.gnu.linkconce.got*)
    }

    .shell_cmds ALIGN(0x1000) : 
    {
        __start_shell_cmds = .;
        *(.shell_cmds*);
        __stop_shell_cmds = .;
    }

    _loadEnd = .; 
    
    .bss ALIGN(0x1000) : 
    {
        *(COMMON)
        *(.bss*)
        *(.gnu.linkonce.b*)
    }
    
    _bssEnd = .; 

    _data_end = .;
    
    /DISCARD/ :
    {
        *(.comment)
        *(.eh_frame)
    }
}

